target_sources(kwin PRIVATE
    common.cpp
    drm_format_helper.cpp
    edid.cpp
    filedescriptor.cpp
    orientationsensor.cpp
    ramfile.cpp
    realtime.cpp
    softwarevsyncmonitor.cpp
    subsurfacemonitor.cpp
    udev.cpp
    vsyncmonitor.cpp
    xcursortheme.cpp
    systemservice.cpp
    watchdog.cpp
)

ecm_qt_declare_logging_category(kwin
    HEADER watchdoglogging.h
    IDENTIFIER KWIN_WATCHDOG
    CATEGORY_NAME kwin_watchdog
    DEFAULT_SEVERITY Info
)

if (KWIN_BUILD_X11)
    target_sources(kwin PRIVATE xcbutils.cpp)
endif()

if(CMAKE_SYSTEM_NAME MATCHES "Linux")
    target_sources(kwin PRIVATE executable_path_proc.cpp)
elseif(CMAKE_SYSTEM_NAME MATCHES "FreeBSD")
    target_sources(kwin PRIVATE executable_path_sysctl.cpp)
else()
    message(FATAL_ERROR "Unsupported platform ${CMAKE_SYSTEM_NAME}")
endif()
